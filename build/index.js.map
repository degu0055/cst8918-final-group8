{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../app/routes/_index.tsx", "../app/api-services/open-weather-service.ts", "../app/utils/text-formatting.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  // This is ignored so we can keep it in the template for visibility.  Feel\n  // free to delete this parameter in your app if you're not using it!\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const links: LinksFunction = () => [\n  ...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\n];\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { json } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\nimport { fetchWeatherData } from '../api-services/open-weather-service'\nimport { capitalizeFirstLetter } from '../utils/text-formatting'\nimport type { MetaFunction } from '@remix-run/node'\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: 'Remix Weather' },\n    {\n      name: 'description',\n      content: 'A demo web app using Remix and OpenWeather API.',\n    },\n  ]\n}\n\nconst location = {\n  city: 'Ottawa',\n  postalCode: 'K2G 1V8', // Algonquin College, Woodroffe Campus\n  lat: 45.3211,\n  lon: -75.7391,\n  countryCode: 'CA',\n}\nconst units = 'metric'\n\nexport async function loader() {\n  // TODO: accept query params for location and units\n  // TODO: look up location by postal code\n\n  const data = await fetchWeatherData({\n    lat: location.lat,\n    lon: location.lon,\n    units: units,\n  })\n  return json({ currentConditions: data })\n}\n\nexport default function CurrentConditions() {\n  const { currentConditions } = useLoaderData<typeof loader>()\n  const weather = currentConditions.weather[0]\n  return (\n    <>\n      <main\n        style={{\n          padding: '1.5rem',\n          fontFamily: 'system-ui, sans-serif',\n          lineHeight: '1.8',\n        }}\n      >\n        <h1>Remix Weather</h1>\n        <p>\n          For Algonquin College, Woodroffe Campus <br />\n          <span style={{ color: 'hsl(220, 23%, 60%)' }}>\n            (LAT: {location.lat}, LON: {location.lon})\n          </span>\n        </p>\n        <h2>Current Conditions</h2>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            gap: '2rem',\n            alignItems: 'center',\n          }}\n        >\n          <img src={getWeatherIconUrl(weather.icon)} alt=\"\" />\n          <div style={{ fontSize: '2rem' }}>\n            {currentConditions.main.temp.toFixed(1)}\u00B0C\n          </div>\n        </div>\n        <p\n          style={{\n            fontSize: '1.2rem',\n            fontWeight: '400',\n          }}\n        >\n          {capitalizeFirstLetter(weather.description)}. Feels like{' '}\n          {currentConditions.main['feels_like'].toFixed(1)}\u00B0C.\n          <br />\n          <span style={{ color: 'hsl(220, 23%, 60%)', fontSize: '0.85rem' }}>\n            updated at{' '}\n            {new Intl.DateTimeFormat('en-CA', {\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric',\n              hour: 'numeric',\n              minute: '2-digit',\n            }).format(currentConditions.dt * 1000)}\n          </span>\n        </p>\n      </main>\n      <section\n        style={{\n          backgroundColor: 'hsl(220, 54%, 96%)',\n          padding: '0.5rem 1.5rem 1rem 1.5rem',\n          borderRadius: '0.25rem',\n        }}\n      >\n        <h2>Raw Data</h2>\n        <pre>{JSON.stringify(currentConditions, null, 2)}</pre>\n      </section>\n      <hr style={{ marginTop: '2rem' }} />\n      <p>\n        Learn how to customize this app. Read the{' '}\n        <a target=\"_blank\" href=\"https://remix.run/docs\" rel=\"noreferrer\">\n          Remix Docs\n        </a>\n      </p>\n    </>\n  )\n}\n\nfunction getWeatherIconUrl(iconCode: string) {\n  return `http://openweathermap.org/img/wn/${iconCode}@2x.png`\n}\n", "const API_KEY = process.env.WEATHER_API_KEY\nconst TEN_MINUTES = 1000 * 60 * 10 // in milliseconds\n\nconst resultsCache: Record<string, { lastFetch: number; data: unknown }> = {}\nfunction getCacheEntry(key: string) {\n  return resultsCache[key]\n}\nfunction setCacheEntry(key: string, data: unknown) {\n  resultsCache[key] = { lastFetch: Date.now(), data }\n}\nfunction isDataStale(lastFetch: number) {\n  return Date.now() - lastFetch > TEN_MINUTES\n}\n\ninterface FetchWeatherDataParams {\n  lat: number\n  lon: number\n  units: string\n}\nexport async function fetchWeatherData({\n  lat,\n  lon,\n  units,\n}: FetchWeatherDataParams) {\n  const baseURL = 'https://api.openweathermap.org/data/2.5/weather'\n  const queryString = `lat=${lat}&lon=${lon}&units=${units}&appid=${API_KEY}`\n\n  const cacheEntry = getCacheEntry(queryString)\n  if (cacheEntry && !isDataStale(cacheEntry.lastFetch)) {\n    return cacheEntry.data\n  }\n  const response = await fetch(`${baseURL}?${queryString}`)\n  const data = await response.json()\n  setCacheEntry(queryString, data)\n  return data\n}\n\nexport async function getGeoCoordsForPostalCode(\n  postalCode: string,\n  countryCode: string,\n) {\n  const url = `http://api.openweathermap.org/geo/1.0/zip?zip=${postalCode},${countryCode}&appid=${API_KEY}`\n  const response = await fetch(url)\n  const data = response.json()\n  return data\n}\n", "export function capitalizeFirstLetter(sourceString: string) {\n  return sourceString.charAt(0).toUpperCase() + sourceString.slice(1)\n}\n", "export default {'entry':{'module':'/build/entry.client-JO36H3FP.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-RUCBNNF6.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-CCLSKGYA.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-RV4U4C7Y.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-TLJKJ6SM.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'bb8a0139','hmr':{'runtime':'/build/_shared/chunk-CCLSKGYA.js','timestamp':1748033340537},'url':'/build/manifest-BB8A0139.js'};", "\nimport * as entryServer from \"/Users/romeodeguzmanii/NotIcloudSync/8918 - TH - Infra/Lab-A03 Pulumi Weather App/cst8918-a03-h03-pulumi-weather/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "units", "jsxDEV"]
}
